[USER-DEFINED]
# Variable $IP_AUTO attempts to auto-discover IP address
MANAGER_IP = $IP_AUTO
MAIN_UPDATE_FREQUENCY = 5
MAIN_UPDATE_ATTEMPTS = 36
MAIN_NOTIFICATION = $False
MAIN_ATTEMPTS = 3
MAIN_TIMEOUT = 240
# Variable $USER auto-selects current username
MAIN_USERNAME = $USER_AUTO
# This is the username created inside the VMs
MAIN_LOGIN = cbuser
# Variable $PATH_TO_TOOL attempts to auto-selects the appropriate path 
MAIN_BASE_DIR = $PATH_TO_TOOL

# Which cloud to pick first when the tool first starts
STARTUP_CLOUD = MYSIM

# List the clouds you want to define
CLOUDOPTION_MYAS = cldattach as, vmcattach all
CLOUDOPTION_MYDO = cldattach do, vmcattach all
CLOUDOPTION_MYDOK8S = cldattach dok8s, vmcattach all
CLOUDOPTION_MYEC2 = cldattach ec2, vmcattach all
CLOUDOPTION_MYGCE = cldattach gce, vmcattach all
CLOUDOPTION_MYKUB = cldattach kub, vmcattach all
CLOUDOPTION_MYNOP = cldattach nop, vmcattach all
CLOUDOPTION_MYNTNX = cldattach ntnx, vmcattach all
CLOUDOPTION_MYOS = cldattach os, vmcattach all
CLOUDOPTION_MYOSK = cldattach osk, vmcattach all
CLOUDOPTION_MYPCM = cldattach pcm, vmcattach all
CLOUDOPTION_MYPDM = cldattach pdm, vmcattach all
CLOUDOPTION_MYPLM = cldattach plm, vmcattach all
CLOUDOPTION_MYSIM = cldattach sim, vmcattach all
CLOUDOPTION_MYSLR = cldattach slr, vmcattach all
CLOUDOPTION_MYVCD = cldattach vcd, vmcattach all

# START: Specify the individual parameters for each cloud
#-------------------------------------------------------------------------------
# Azure Service Manager (AS) requires the following parameters (via LibCloud)
[USER-DEFINED : CLOUDOPTION_MYAS ]
AS_CREDENTIALS = arbitrarytag1:subscription_id1+certificate_path1,arbitrarytag2:subscription_id2+certificate_path2   # The subscription id is obtained from the Azure portal. The certificate is generated locally and uploaded through the portal,
AS_INITIAL_VMCS = Central____US:sut                                                                                  # Use four consecutives underscores (____) to indicate a space in the name
AS_NETNAME = public                                                                                                  # Currently not used
AS_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
AS_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
AS_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
#-------------------------------------------------------------------------------
# DigitalOcean (DO) requires the following parameters (via LibCloud)
[USER-DEFINED : CLOUDOPTION_MYDO ]
DO_INITIAL_VMCS = tor1:sut                                                                                            # VMC == DO data center (we don't have availability zones yet)
DO_CREDENTIALS = long_hex_token_from_digitalocean.com:arbitrarytag1;another_token:arbitrarytag2                       # This is your DO access token. The driver supports multiple accounts and will distribute AIs across all accounts in a round-robin fashion.
DO_SSH_KEY_NAME = cbtool_rsa                                                                                          # Either upload credentials/cbtool_rsa.pub to DO or tell us where your private key is
DO_KEY_NAME = cbtool_rsa                                                                                              # Comma-separated list of IDs (or names) of your DO ssh keys
DO_NETNAME = private                                                                                                  # If your Orchestrator is running inside the cloud, use "private". If external to the cloud, use "public".For more complex networks, refer to the documentation
DO_LOGIN = cbuser                                                                                                     # The username that logins on the VMs
#-------------------------------------------------------------------------------
# DigitalOcean (DO) requires the following parameters (via LibCloud)
[USER-DEFINED : CLOUDOPTION_MYDOK8S ]
DOK8S_CREDENTIALS = long_hex_token_from_digitalocean.com:arbitrarytag1;another_token:arbitrarytag2                    # This is your DO access token. The driver supports multiple accounts and will distribute AIs across all accounts in a round-robin fashion.
DOK8S_SSH_KEY_NAME = cbtool_rsa                                                                                       # Either upload credentials/cbtool_rsa.pub to DO or tell us where your private key is
DOK8S_KEY_NAME = cbtool_rsa                                                                                           # Comma-separated list of IDs (or names) of your DO ssh keys
DOK8S_NETNAME = private                                                                                               # If your Orchestrator is running inside the cloud, use "private". If external to the cloud, use "public".For more complex networks, refer to the documentation
DOK8S_LOGIN = cbuser                                                                                                  # The username that logins on the VMs
DOK8S_CLUSTERS = mycluster
DOK8S_NAMESPACE = mynamespace
#-------------------------------------------------------------------------------
# Elastic Compute Cloud (EC2) requires the following parameters 
[USER-DEFINED : CLOUDOPTION_MYEC2] 
EC2_ACCESS = ABCDEFGHIJKLMNOPQRST                                                                                     # This is the AWS access key id
EC2_CREDENTIALS = ABCDEFGHIJKLMNOPQRSTUVXYWZ01234567890-+*                                                            # This is the AWS secret access key 
EC2_SECURITY_GROUPS = cloudbench                                                                                      # Make sure that this group exists first 
EC2_KEY_NAME = cbtool_rsa                                                                                             # Make sure that this key exists first 
EC2_INITIAL_VMCS = us-east-1:sut                                                                                      # Change "us-east-1" accordingly
EC2_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
EC2_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
EC2_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
EC2_NETNAME = private                                                                                                 # If your Orchestrator is running inside the cloud, use "private". If external to the cloud, use "public".For more complex networks, refer to the documentation
#-------------------------------------------------------------------------------
[USER-DEFINED : CLOUDOPTION_MYGCE ]
GCE_ACCESS = project_name_for_images,project_name_for_instances                                                       # Obtained with "gcloud info".
GCE_CREDENTIALS = ABCDEFGHIJKLMNOPQRSTUVXYWZ01234567890-+*                                                            # Currently, not used
GCE_INITIAL_VMCS = us-east1-b:sut                                                                                     # Change "us-east1-b" accordingly
GCE_SECURITY_GROUPS = cloudbench                                                                                      # Currently, not used
GCE_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
GCE_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
GCE_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
GCE_NETNAME = private                                                                                                 # If your Orchestrator is running inside the cloud, use "private". If external to the cloud, use "public".For more complex networks, refer to the documentation
#-------------------------------------------------------------------------------
# Kubernetes (KUB) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYKUB ]
KUB_ACCESS = ~/.kube/config                                                                                           # The full path to the kubernetes configuration file
KUB_CREDENTIALS = NOTUSED                                                                                             # Currently not used
KUB_INITIAL_VMCS = world                                                                                              # This really does not matter, could be anything
KUB_NETNAME = NOTUSED                                                                                                 # use the value returned by `kubectl config current-context`
KUB_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
KUB_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
KUB_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
KUB_NAMESPACE = default
#-------------------------------------------------------------------------------
# No Op Cloud (NOP) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYNOP]
NOP_INITIAL_VMCS = world                                                                                              # This really does not matter, could be anything
NOP_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
NOP_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
NOP_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
#-------------------------------------------------------------------------------
# Openstack (OS) requires the following parameters (via LibCloud)
[USER-DEFINED : CLOUDOPTION_MYOS ]
OS_CREDENTIALS = arbitrarytag1:file1,arbitrarytag1:file2                                                             # File referes to the "rc" file used to connect to the cloud
OS_INITIAL_VMCS = RegionOne:sut                                                                                      # This value will be overriden by whatever is defined on the "rc" file (i.e., make sure that they do match)
OS_SECURITY_GROUPS = default                                                                                         # Make sure that this group exists first
OS_NETNAME = private                                                                                                 # Make sure that this network exists first
OS_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
OS_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
OS_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
#-------------------------------------------------------------------------------
# OpenStack (OSK) requires the following parameters (replace everything between <>, *including* the signs!)
[USER-DEFINED : CLOUDOPTION_MYOSK]
OSK_ACCESS = http://<address>:5000/v2.0/                                                                              # Address of the controller node (where nova-api runs)
OSK_CREDENTIALS =  <user>-<password>-<tenant>
OSK_INITIAL_VMCS = RegionOne:sut                                                                                      # Change "RegionOne" accordingly
OSK_SECURITY_GROUPS = default	                                                                                      # Make sure that this group exists first
OSK_NETNAME = private                                                                                                 # Make sure that this network exists first
OSK_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
OSK_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
OSK_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
#-------------------------------------------------------------------------------
# Parallel Container Manager (PCM) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYPCM ]
PCM_ACCESS = https://<address>:8443,https://<address>:8443                                                            # A comma-separated list of LXD hosts (usually port 8443)
PCM_CREDENTIALS = trustpassword                                                                                       # LXD's "trust password"
PCM_INITIAL_VMCS = world                                                                                              # This really does not matter, could be anything
PCM_NETNAME = lxdbr0                                                                                                  # The name of an already existing network on LXD
PCM_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
PCM_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
PCM_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
#-------------------------------------------------------------------------------
# Parallel Docker Manager (PDM) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYPDM ]
PDM_INITIAL_VMCS = world                                                                                              # This really does not matter, could be anything
PDM_ACCESS = tcp://<address>:2375,tcp://<address>:2375                                                                # A comma-separated list of Docker hosts (usually port 2375) or a single Swarm host (usually port 5001)
PDM_CREDENTIALS = NOTUSED                                                                                             # Currently not used
PDM_NETNAME = bridge                                                                                                  # The name of an already existing network on Docker
PDM_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
PDM_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
PDM_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
#-------------------------------------------------------------------------------
# Parallel Libvirt Manager (PLM) requires the following parameters 
[USER-DEFINED : CLOUDOPTION_MYPLM]
PLM_ACCESS = <address>
PLM_INITIAL_VMCS = grouptwo:sut
PLM_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
PLM_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
PLM_NETNAME = default
PLM_POOLNAME = default
PLM_LOGIN = cbuser
#-------------------------------------------------------------------------------
# Simulated Cloud (SIM) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYSIM]
SIM_INITIAL_VMCS = simzone_a:sut,simzone_b:lg
SIM_SSH_KEY_NAME = cbtool_rsa
SIM_KEY_NAME = cbtool_rsa 
SIM_SECURITY_GROUPS = simsecgrp
SIM_LOGIN = cbuser
#-------------------------------------------------------------------------------
# SoftLayer (SLR) requires the following parameters 
[USER-DEFINED : CLOUDOPTION_MYSLR ]
SLR_ACCESS = private                                                                                                  # Leave "private" if you are running inside SoftLayer
SLR_CREDENTIALS = <username>-ABCDEFGHIJKLMNOPQRSTUVXYWZ01234567890-+*0123456789001234567890-cci                       # User and API access key can be obtained from https://manage.softlayer.com/Administrative/apiKeychain
SLR_INITIAL_VMCS = dal05                                                                                              # Select the appropriate SoftLayer datacenter
SLR_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
SLR_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
SLR_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
#-------------------------------------------------------------------------------
# vCloud Director requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYVCD]
VCD_ACCESS = 10.1.1.1                                                                                                 # IP address or host name for vCloud Director API
VCD_CREDENTIALS = happyguy@DeployPlace;password                                                                       # username to log into vCloud Director API
VCD_KEY_NAME = xxxxx                                                                                                  # password to log into vCloud Director API (same as above)
VCD_SECURITY_GROUPS = none                                                                                            # Not used in vCloud Director, but required by CloudBench
VCD_INITIAL_VMCS = DeployPlace                                                                                        # vCloud Director instance name
VCD_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
VCD_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
VCD_LOGIN = cbuser                                                                                                    # Username associated with the private key above
VCD_SNMP_VERSION = 1
VCD_SNMP_PASSWORD = dummy
VCD_SNMP_COMMUNITY = cbtest
VCD_SNMP_VARIABLE = SNMPv2-MIB::sysLocation
#-------------------------------------------------------------------------------
# ZStack (ZSK) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYZSTACK]
ZSK_ACCESS = http://<ip_address>:8080/zstack/v1/          # Address of controlled node where ZStack RESTfullapi runs, ip_address is the ip of controlled node
ZSK_INITIAL_VMCS = ZONE-1                                 # Change "RegionOne" accordingly
ZSK_LOGIN = cbuser                                        # The username that logins on the VMs
ZSK_KEY_NAME = cbtool_rsa                                 # Either upload credentials/cbtool_rsa.pub to ZSTACK or tell us where your private key is
ZSK_SSH_KEY_NAME = cbtool_rsa                             # Name of the private key present in the cloud to be injected on VMs
ZSK_NETNAME = spec-private                                # The name of the already existing L3 network on ZSTACK cloud
ZSK_DISK_SIZE = spec-disk                                 # The name of the already existing disk offering on ZSTACK cloud
#-------------------------------------------------------------------------------
# END: Specify the individual parameters for each cloud
# Linode (LIN) requires the following parameters (via LibCloud)
[USER-DEFINED : CLOUDOPTION_MYLIN ]
LIN_INITIAL_VMCS = us-central:sut                                                                # VMC == Linode region
LIN_CREDENTIALS = arbitrarytag1:long_hex_token_from_linode.com;arbitrarytag2:another_token       # This is your Linode access token. The driver supports multiple accounts and will distribute AIs across all accounts in a round-robin fashion.
LIN_SSH_KEY_NAME = cbtool_rsa                                                                    # Either upload credentials/cbtool_rsa.pub to Linode or tell us where your private key is
LIN_KEY_NAME = cbtool_rsa                                                                        # Comma-separated list of IDs (or names) of your Linode ssh keys
LIN_NETNAME = default                                                                            # If your Orchestrator is running inside the cloud, use "private". If external to the cloud, use "public".For more complex networks, refer to the documentation
LIN_LOGIN = cbuser                                                                               # The username that logins on the VMs

#-------------------------------------------------------------------------------
# Nunanix (ntnx) requires the following parameters 
[USER-DEFINED : CLOUDOPTION_MYNTNX]
NTNX_ACCESS = 10.80.30.20
NTNX_CREDENTIALS =  username-password-default			# username-password-tenant
NTNX_INITIAL_VMCS = RegionOne
NTNX_SECURITY_GROUPS = default	   # Make sure that this group exists first
NTNX_NETNAME = ss1111                                                                                                 # Make sure that this network exists first
NTNX_SSH_KEY_NAME = cbtool_rsa                                                                                         # Name of the private/public key pair - locally available - used to login on the VMs
NTNX_KEY_NAME = cbtool_rsa                                                                                             # Name of the private key present in the cloud to be injected on VMs
NTNX_LOGIN = cbuser                                                                                                    # The username that logins on the VMs
#-------------------------------------------------------------------------------




[OBJECTSTORE]
USAGE = shared

[METRICSTORE]
USAGE = shared

[API_DEFAULTS]
PORT = 7070

[GUI_DEFAULTS]
BRANDING = favicon.ico,20,http://localhost
PORT = 8080

# IMPORTANT: The cloud-specific VM_TEMPLATES (mapping a "role" to a particular imageid and size) and SIZE_TEMPLATES (mapping a <# vCPU>-<size vMEM> pair to an instance size name) can be redefined here. A few examples for illustrative purposes:
#[VM_TEMPLATES : EC2_CLOUDCONFIG ]
#...
#WRK = size:02-2048, imageids:1, imageid1:ami-04b9e92b5572fa0d1
#...
#[SIZE_TEMPLATES : GCE_CLOUDCONFIG]
# Sizes extracted from https://cloud.google.com/compute/docs/machine-types
#...
#01-2048=n1-standard-1
#...
