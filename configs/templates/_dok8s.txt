[USER-DEFINED]
DOK8S_ACCESS = https://api.digitalocean.com/v2 
# Name of the ssh key pair 
DOK8S_KEY_NAME = cbtool_rsa
DOK8S_SSH_KEY_NAME = cbtool_rsa
DOK8S_LOGIN = need_to_be_configured_by_user
DOK8S_INITIAL_VMCS = none
DOK8S_NETNAME = need_to_be_configured_by_user
DOK8S_CREDENTIALS = need_to_be_configured_by_user
DOK8S_CLUSTERS = need_to_be_configured_by_user
DOK8S_NAMESPACE = need_to_be_configured_by_user

# PEBCAK documentation for the Wizard and CLI
DOK8S_ACCESS_DOC = Please enter the full path to the kubernetes configuration file
DOK8S_ACCESS_DEFAULT = tcp://<address>:2375
DOK8S_LOGIN_DOC = $LOGIN_DOC
DOK8S_LOGIN_DEFAULT = klabuser
DOK8S_SSH_KEY_NAME_DOC = $SSH_KEY_NAME_DOC
DOK8S_SSH_KEY_NAME_DEFAULT = id_rsa.private
DOK8S_INITIAL_VMCS_DOC = $INITIAL_VMCS_DOC 
DOK8S_INITIAL_VMCS_DEFAULT = none
DOK8S_NAMESPACE_DEFAULT = default
DOK8S_NAMESPACE_DOC = Namespace to use
DOK8S_NETNAME_DOC = "Please enter the name of the network that will connect all created Containers"
DOK8S_NETNAME_DEFAULT = private
DOK8S_CREDENTIALS_DOC = DigitalOcean Bearer Tokens
DOK8S_CREDENTIALS_DEFAULT = xxxxx
DOK8S_CLUSTERS_DOC = Comma-separted groups of "name:region:k8s_version:k8s_worker_size:k8s_workers_per_cluster"
DOK8S_CLUSTERS_DEFAULT = name:region:version:worker_size,number_of_workers

[SPACE : DOK8S_CLOUDCONFIG ]
SSH_KEY_NAME = $DOK8S_SSH_KEY_NAME

[MON_DEFAULTS : DOK8S_CLOUDCONFIG ]
COLLECT_FROM_HOST = $False
COLLECT_FROM_GUEST = $False

[VMC_DEFAULTS : DOK8S_CLOUDCONFIG]
CLUSTERS = $DOK8S_CLUSTERS
INITIAL_VMCS = $DOK8S_INITIAL_VMCS
DISCOVER_HOSTS = $False
ACCESS = $Empty
CREDENTIALS = $DOK8S_CREDENTIALS
SECURITY_GROUPS = $Empty
KEY_NAME = $DOK8S_KEY_NAME
ADDITIONAL_DISCOVERY = $Empty
MIGRATE_SUPPORTED = $False
PROTECT_SUPPORTED = $False
HOST_USER_ROOT = $False
NAMESPACE = $DOK8S_NAMESPACE

[VM_DEFAULTS : DOK8S_CLOUDCONFIG]
ACCESS = $Empty
CREDENTIALS = $DOK8S_CREDENTIALS
EXTRA_INFO = $Empty
CAPTURE_SUPPORTED = $False
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $False
LOGIN = $DOK8S_LOGIN
SECURITY_GROUPS = $Empty
KEY_NAME = $DOK8S_KEY_NAME
SSH_KEY_NAME = $DOK8S_SSH_KEY_NAME
CHECK_BOOT_STARTED = poll_cloud
# Other methods could be used to check if a VM *STARTED* booting
#CHECK_BOOT_STARTED = subscribe_on_starting
CHECK_BOOT_COMPLETE = tcp_on_22
# Other methods could be used to check if a VM *FINISHED* booting
#CHECK_BOOT_COMPLETE = subscribe_on_booting
#CHECK_BOOT_COMPLETE = wait_for_0
NETNAME = private
TENANT = default
SIZE = from_vm_template
LEAVE_INSTANCE_ON_FAILURE = $False
FORCE_FAILURE = $False
DISABLE_TIMESYNC = $True
NAMESPACE = $DOK8S_NAMESPACE
ABSTRACTION = pod
REPLICAS = 1
PORTS_BASE = 10000
PORTS_RANGE = 5000
IMAGE_PREFIX = ibmcb/ubuntu_
IMAGE_SUFFIX = $EMPTY
DOCKER_REPO = https://hub.docker.com/r/
ANNOTATIONS = $Empty
IMAGE_PULL_POLICY = IfNotPresent
IMAGE_PULL_SECRETS = $False

[AI_DEFAULTS : DOK8S_CLOUDCONFIG]
CAPTURE_SUPPORTED = $False
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $True
RUN_APPLICATION_SCRIPTS = $True
LOGIN = $DOK8S_LOGIN
SSH_KEY_NAME = $DOK8S_SSH_KEY_NAME
ATTACH_PARALLELISM = 5
NAMESPACE = $DOK8S_NAMESPACE
ABSTRACTION = pod
PORTS_BASE = 10000

[AIDRS_DEFAULTS : DOK8S_CLOUDCONFIG]
LOGIN = $DOK8S_LOGIN
SSH_KEY_NAME = $DOK8S_SSH_KEY_NAME

[VMCRS_DEFAULTS : DOK8S_CLOUDCONFIG]
LOGIN = $DOK8S_LOGIN
SSH_KEY_NAME = $DOK8S_SSH_KEY_NAME

[FIRS_DEFAULTS : DOK8S_CLOUDCONFIG]
LOGIN = $DOK8S_LOGIN
SSH_KEY_NAME = $DOK8S_SSH_KEY_NAME

[VM_TEMPLATES : DOK8S_CLOUDCONFIG]

[SIZE_TEMPLATES : DOK8S_CLOUDCONFIG]
X-Y=X-Y
