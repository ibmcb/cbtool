[USER-DEFINED]
OSK_ACCESS = need_to_be_configured_by_user
OSK_CREDENTIALS = need_to_be_configured_by_user
OSK_KEY_NAME = cbtool_rsa
OSK_SECURITY_GROUPS = need_to_be_configured_by_user
OSK_INITIAL_VMCS = need_to_be_configured_by_user
OSK_SSH_KEY_NAME = cbtool_rsa
OSK_LOGIN = need_to_be_configured_by_user
OSK_NETNAME = need_to_be_configured_by_user

# PEBCAK documentation for the Wizard and CLI
OSK_ACCESS_DOC = Please enter the HTTP address of the nova API\nused for access through nova to interact with the cloud.\nThis is usually in the form of http://<address>:5000/v2.0/
OSK_ACCESS_DEFAULT = http://<address>:5000/v2.0/
OSK_CREDENTIALS_DOC = This option requires a specific syntax:\n<username>-<password>-<tenant>\n ... Please enter these parameters as you\nwould use them to login to the OpenStack\nuser interface.
OSK_CREDENTIALS_DEFAULT = admin-password-admin
OSK_KEY_NAME_DOC = Please enter the OpenStack key used to login\nto your VMs as root. This key needs to be generated in\nthe OpenStack user interface before starting the tool.
OSK_KEY_NAME_DEFAULT = some_key_name 
OSK_SECURITY_GROUPS_DOC = Please enter the security group used in\nyour OpenStack vms. This group needs to be created\nin the OpenStack user interface before\nstarting the tool.
OSK_SECURITY_GROUPS_DEFAULT = default 
OSK_LOGIN_DOC = $LOGIN_DOC
OSK_LOGIN_DEFAULT = some_login_name
OSK_SSH_KEY_NAME_DOC = $SSH_KEY_NAME_DOC
OSK_SSH_KEY_NAME_DEFAULT = id_rsa.private
OSK_INITIAL_VMCS_DOC = $INITIAL_VMCS_DOC 
OSK_INITIAL_VMCS_DEFAULT = RegionOne
OSK_NETNAME_DOC = "Please enter the name of the network that will connect all created VMs"
OSK_NETNAME_DEFAULT = private

[SPACE : OSK_CLOUDCONFIG ]
SSH_KEY_NAME = $OSK_SSH_KEY_NAME

[MON_DEFAULTS : OSK_CLOUDCONFIG ]
COLLECT_FROM_HOST = $False # requires ganglia installation on hypervisor
COLLECT_FROM_GUEST = $False

[VMC_DEFAULTS : OSK_CLOUDCONFIG]
ACCESS = $OSK_ACCESS
CREDENTIALS = $OSK_CREDENTIALS
SECURITY_GROUPS = $OSK_SECURITY_GROUPS
KEY_NAME = $OSK_KEY_NAME
INITIAL_VMCS = $OSK_INITIAL_VMCS
ADDITIONAL_DISCOVERY = $Empty
MODIFY_HOST_NAMES = $False
MIGRATE_SUPPORTED = $True
PROTECT_SUPPORTED = $True
USE_CINDERCLIENT = $True
USE_GLANCECLIENT = $False
HOST_USER_ROOT = $False

[VM_DEFAULTS : OSK_CLOUDCONFIG]
ACCESS = $OSK_ACCESS
CREDENTIALS = $OSK_CREDENTIALS
KEY_NAME = $OSK_KEY_NAME
SECURITY_GROUPS = $OSK_SECURITY_GROUPS
CLOUD_MAC = $True
CAPTURE_SUPPORTED = $True
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $False
LOGIN = $OSK_LOGIN
SSH_KEY_NAME = $OSK_SSH_KEY_NAME
CHECK_BOOT_STARTED = poll_cloud
# Other methods could be used to check if a VM *STARTED* booting
#CHECK_BOOT_STARTED = subscribe_on_starting
CHECK_BOOT_COMPLETE = tcp_on_22
# Other methods could be used to check if a VM *FINISHED* booting
#CHECK_BOOT_COMPLETE = subscribe_on_booting
#CHECK_BOOT_COMPLETE = wait_for_0
NETNAME = $OSK_NETNAME
TENANT = default
PROJECT = default
JUMPHOST_ROLE = tinyvm
JUMPHOST_SIZE = m1.tiny
SIZE = from_vm_template
CREATE_LB = $false
CGROUPS_BASE_DIR = /sys/fs/cgroup/
HOSTNAME_KEY = cloud_vm_name
FLOATING_POOL = $Empty
ALWAYS_CREATE_FLOATING_IP = $True
USE_CINDERCLIENT = $True
USE_GLANCECLIENT = $False
LEAVE_INSTANCE_ON_FAILURE = $False
FORCE_FAILURE = $False
DISABLE_TIMESYNC = $False
AVAILABILITY_ZONE = $Empty
BOOT_VOLUME_IMAGEID1_INSTANCE = None
FLAVOR_INSTANCE = None
IMAGE_PREFIX = $EMPTY
IMAGE_SUFFIX = $EMPTY

[AI_DEFAULTS : OSK_CLOUDCONFIG]
ATTACH_PARALLELISM = 10
CAPTURE_SUPPORTED = $True
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $True
LOGIN = $OSK_LOGIN
SSH_KEY_NAME = $OSK_SSH_KEY_NAME
CREDENTIALS = $OSK_CREDENTIALS
KEY_NAME = $OSK_KEY_NAME
NETNAME = $OSK_NETNAME
TENANT = default
PROJECT = default
FLOATING_POOL = $Empty
CREATE_LB = $false
ALWAYS_CREATE_FLOATING_IP = $True
DONT_START_QEMU_SCRAPER = $True

[AIDRS_DEFAULTS : OSK_CLOUDCONFIG]
LOGIN = $OSK_LOGIN
SSH_KEY_NAME = $OSK_SSH_KEY_NAME

[VMCRS_DEFAULTS : OSK_CLOUDCONFIG]
LOGIN = $OSK_LOGIN
SSH_KEY_NAME = $OSK_SSH_KEY_NAME

[FIRS_DEFAULTS : OSK_CLOUDCONFIG]
LOGIN = $OSK_LOGIN
SSH_KEY_NAME = $OSK_SSH_KEY_NAME

[VM_TEMPLATES : OSK_CLOUDCONFIG]
ACMEAIR = size:m1.medium, imageid1:cb_acmeair 
APACHE = size:m1.medium, imageid1:cb_wrk
BONNIE = size:m1.medium, imageid1:cb_bonnie
BTEST = size:m1.medium, imageid1:cb_btest
CASSANDRA = size:m1.medium, imageid1:cb_ycsb
CHECK = size:m1.tiny, imageid1:to_replace
CLIENT_IBM_DAYTRADER = size:m1.medium, imageid1:cb_daytrader
CLIENT_OPEN_DAYTRADER = size:m1.medium, imageid1:cb_open_daytrader
CLIENT_TRADELITE = size:m1.medium, imageid1:cb_tradelite
CLIENT_WINDOWS = size:m1.medium, imageid1:cb_windows
CN_HPC = size:m1.medium, imageid1:cb_hpcc
COREMARK = size:m1.tiny, imageid1:cb_coremark
DB2 = size:m1.medium, lb_size:m1.large, imageid1:cb_daytrader
DDGEN = size:m1.medium, imageid1:cb_ddgen
DRIVER_COREMARK = size:m1.tiny, imageid1:cb_coremark
DRIVER_DAYTRADER = size:m1.medium, imageid1:cb_daytrader
DRIVER_FILEBENCH = size:m1.medium, imageid1:cb_filebench
DRIVER_FIO = size:m1.medium, imageid1:cb_fio
DRIVER_HADOOP = size:m1.tiny, imageid1:cb_hadoop
DRIVER_NETPERF = size:m1.tiny, imageid1:cb_hadoop
DRIVER_TRADELITE = size:m1.medium, imageid1:cb_tradelite
FEN_HPC = size:m1.medium, imageid1:cb_hpcc
FILEBENCH = size:m1.small, imageid1:cb_filebench
FIO = size:m1.medium, imageid1:cb_fio
GERONIMO = size:m1.medium, imageid1:cb_open_daytrader
GIRAPHMASTER = size:m1.small, imageid1:cb_giraph
GIRAPHSLAVE = size:m1.medium, imageid1:cb_giraph
HADOOPMASTER = size:m1.small, imageid1:cb_hadoop
HADOOPSLAVE = size:m1.medium, imageid1:cb_hadoop
IPERFCLIENT = size:m1.small, imageid1:cb_iperf
IPERFSERVER = size:m1.small, imageid1:cb_iperf
LB = size:m1.medium, imageid1:cb_nullworkload
LIBERTY = size:m1.medium, imageid1:cb_acmeair
LINPACK = size:m1.medium, imageid1:cb_linpack
MEMTIER = size:m1.medium, imageid1:cb_memtier
MONGO_CFG_SERVER = size:m1.small, imageid1:cb_ycsb
MONGODB = size:m1.medium, imageid1:cb_ycsb
MONGOS = size:m1.large, imageid1:cb_ycsb
MULTICHASE = size:m1.small, imageid1:cb_multichase
MYSQL = size:m1.medium, lb_size:m1.large, imageid1:cb_open_daytrader
NETCLIENT = size:m1.small, imageid1:cb_netperf
NETSERVER = size:m1.small, imageid1:cb_netperf
NUTTCPCLIENT = size:m1.small, imageid1:cb_nuttcp
NUTTCPSERVER = size:m1.small, imageid1:cb_nuttcp
OLDISIMDRIVER = size:m1.small, imageid1:cb_oldisim
OLDISIMLB = size:m1.small, imageid1:cb_oldisim
OLDISIMLEAF = size:m1.small, imageid1:cb_oldisim
OLDISIMROOT = size:m1.small, imageid1:cb_oldisim
POSTMARK = size:m1.medium, imageid1:cb_postmark
REDIS = size:m1.medium, imageid1:cb_ycsb
SCIMARK = size:m1.small, imageid1:cb_scimark
SEED = size:m1.medium, imageid1:cb_ycsb
SPECJBB = size:m1.medium, imageid1:cb_specjbb
SYSBENCH = size:m1.medium, imageid1:cb_sysbench
TINYVM = size:m1.tiny, imageid1:cb_nullworkload
UNIXBENCH = size:m1.medium, imageid1:cb_unixbench
WAS = size:m1.medium, imageid1:cb_daytrader
WINDOWS = size:m1.medium, imageid1:cb_windows
WRK = size:m1.medium, imageid1:cb_wrk
XPINGRECEIVER = size:m1.small, imageid1:cb_xping
XPINGSENDER = size:m1.small, imageid1:cb_xping
YATINYVM = size:m1.tiny, imageid1:cb_nullworkload
YCSB = size:m1.medium, imageid1:cb_ycsb