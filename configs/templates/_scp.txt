[USER-DEFINED]
SCP_IAAS_CLI_LOCATION = need_to_be_configured_by_user 
SCP_IAAS_PROXY_PORT = need_to_be_configured_by_user 
SCP_IAAS_WEBSERVICE_PORT = need_to_be_configured_by_user 
SCP_IAAS_SERVICE_PUBLIC_KEY = need_to_be_configured_by_user 
SCP_IAAS_PRIVATE_KEY = need_to_be_configured_by_user 
SCP_IAAS_ACCESS_ID = need_to_be_configured_by_user 
SCP_INITIAL_VMCS = need_to_be_configured_by_user 
SCP_SSH_KEY_NAME = cbtool_rsa
SCP_LOGIN = need_to_be_configured_by_user

# PEBCAK documentation for the Wizard and CLI
SCP_IAAS_CLI_LOCATION_DOC = Please enter the hostname of the json API used to administrate your SCP deployment. 
SCP_IAAS_CLI_LOCATION_DEFAULT = <hostname> 
SCP_IAAS_PROXY_PORT_DOC = The tool creates a proxy in the webservice VM\nin order to relay commands between python and\nruby. Please enter an available port on\nwhich to start the proxy. It will be started\nfor you automatically.
SCP_IAAS_PROXY_PORT_DEFAULT = 9090
SCP_IAAS_WEBSERVICE_PORT_DOC = This usually defaults to to '5678/query/'.\nEnter that and change it if necessary.
SCP_IAAS_WEBSERVICE_PORT_DEFAULT = 5678/query/
SCP_IAAS_SERVICE_PUBLIC_KEY_DOC = This usually defaults to '/iaas/cli/adminkey/vm_service.key'.\nEnter that and change it if necessary.
SCP_IAAS_SERVICE_PUBLIC_KEY_DEFAULT = /iaas/cli/adminkey/vm_service.key
SCP_IAAS_PRIVATE_KEY_DOC = This usually defaults to '/iaas/cli/adminkey/admin.key'.\nEnter that and change it if necessary.
SCP_IAAS_PRIVATE_KEY_DEFAULT = /iaas/cli/adminkey/admin.key
SCP_IAAS_ACCESS_ID_DOC = Please enter the username used to login and adminstrate your SCP deployment.
SCP_IAAS_ACCESS_ID_DEFAULT = admin 
SCP_LOGIN_DOC = $LOGIN_DOC
SCP_LOGIN_DEFAULT = klabuser
SCP_SSH_KEY_NAME_DOC = $SSH_KEY_NAME_DOC
SCP_SSH_KEY_NAME_DEFAULT = path_to_some_private_ssh_key_file
SCP_INITIAL_VMCS_DOC = $INITIAL_VMCS_DOC 
SCP_INITIAL_VMCS_DEFAULT = kvm_rack1

[SPACE : SCP_CLOUDCONFIG ]
SSH_KEY_NAME = $SCP_SSH_KEY_NAME

[MON_DEFAULTS : SCP_CLOUDCONFIG ]
COLLECT_FROM_HOST = $False # requires ganglia installation on hypervisor 
COLLECT_FROM_GUEST = $True

[VMC_DEFAULTS : SCP_CLOUDCONFIG ]
# These need to be here for testing that
# the user has entered the correct parameters.
IAAS_CLI_LOCATION = $SCP_IAAS_CLI_LOCATION
IAAS_PROXY_PORT = $SCP_IAAS_PROXY_PORT
IAAS_WEBSERVICE_PORT = $SCP_IAAS_WEBSERVICE_PORT
IAAS_SERVICE_PUBLIC_KEY = $SCP_IAAS_SERVICE_PUBLIC_KEY
IAAS_PRIVATE_KEY = $SCP_IAAS_PRIVATE_KEY
IAAS_ACCESS_ID = $SCP_IAAS_ACCESS_ID
# These are the ones that actually get used
ACCESS = ${SCP_IAAS_CLI_LOCATION}:${SCP_IAAS_PROXY_PORT}-${SCP_IAAS_CLI_LOCATION}:${SCP_IAAS_WEBSERVICE_PORT}
CREDENTIALS = ${SCP_IAAS_ACCESS_ID}-${SCP_IAAS_PRIVATE_KEY}-${SCP_IAAS_SERVICE_PUBLIC_KEY}
INITIAL_VMCS = $SCP_INITIAL_VMCS
SECURITY_GROUPS = $Empty
KEY_NAME = $Empty
MIGRATE_SUPPORTED = $False
PROTECT_SUPPORTED = $False
HOST_USER_ROOT = $False

[VM_DEFAULTS : SCP_CLOUDCONFIG]
# These need to be here for testing that
# the user has entered the correct parameters.
IAAS_CLI_LOCATION = $SCP_IAAS_CLI_LOCATION
IAAS_PROXY_PORT = $SCP_IAAS_PROXY_PORT
IAAS_WEBSERVICE_PORT = $SCP_IAAS_WEBSERVICE_PORT
IAAS_SERVICE_PUBLIC_KEY = $SCP_IAAS_SERVICE_PUBLIC_KEY
IAAS_PRIVATE_KEY = $SCP_IAAS_PRIVATE_KEY
IAAS_ACCESS_ID = $SCP_IAAS_ACCESS_ID
# These are the ones that actually get used
ACCESS = ${SCP_IAAS_CLI_LOCATION}:${SCP_IAAS_PROXY_PORT}-${SCP_IAAS_CLI_LOCATION}:${SCP_IAAS_WEBSERVICE_PORT}
CREDENTIALS = ${SCP_IAAS_ACCESS_ID}-${SCP_IAAS_PRIVATE_KEY}-${SCP_IAAS_SERVICE_PUBLIC_KEY}
INITIAL_VMCS = $SCP_INITIAL_VMCS
CAPTURE_SUPPORTED = $True
RUNSTATE_SUPPORTED = $False
RESIZE_SUPPORTED = $False
LOGIN = $SCP_LOGIN
SSH_KEY_NAME = $SCP_SSH_KEY_NAME
CHECK_BOOT_STARTED = poll_cloud
# Other methods could be used to check if a VM *STARTED* booting
#CHECK_BOOT_STARTED = subscribe_on_starting
CHECK_BOOT_COMPLETE = tcp_on_22
# Other methods could be used to check if a VM *FINISHED* booting
#CHECK_BOOT_COMPLETE = subscribe_on_booting
#CHECK_BOOT_COMPLETE = wait_for_0
NETNAME = private
TENANT = default
SIZE = from_vm_template
LEAVE_INSTANCE_ON_FAILURE = $False
FORCE_FAILURE = $False
DISABLE_TIMESYNC = $False

[AI_DEFAULTS : SCP_CLOUDCONFIG]
ATTACH_PARALLELISM = 2
CAPTURE_SUPPORTED = $True
RUNSTATE_SUPPORTED = $False
RESIZE_SUPPORTED = $False
LOGIN = $SCP_LOGIN
SSH_KEY_NAME = $SCP_SSH_KEY_NAME

[AIDRS_DEFAULTS : SCP_CLOUDCONFIG]
LOGIN = $SCP_LOGIN
SSH_KEY_NAME = $SCP_SSH_KEY_NAME

[VMCRS_DEFAULTS : SCP_CLOUDCONFIG]
LOGIN = $SCP_LOGIN
SSH_KEY_NAME = $SCP_SSH_KEY_NAME

[FIRS_DEFAULTS : SCP_CLOUDCONFIG]
LOGIN = $SCP_LOGIN
SSH_KEY_NAME = $SCP_SSH_KEY_NAME

# available sizes:
# xsmall: 512MB, 1 vcpu
# small: 1GB, 1 vcpu
# medium: 2GB, 2 vcpus
# large: 4GB, 2 vcpus
# xlarge: 8GB, 2 vcpus

[VM_TEMPLATES : SCP_CLOUDCONFIG]
CLIENT_DAYTRADER = size:medium, imageid1:cb_daytrader
DRIVER_DAYTRADER = size:medium, imageid1:cb_daytrader
CLIENT_TRADELITE = size:medium, imageid1:cb_tradelite
DRIVER_TRADELITE = size:medium, imageid1:cb_tradelite
MYSQL = size:medium, lb_size:large, imageid1:cb_daytrader
GERONIMO = size:medium, imageid1:cb_daytrader
DB2 = size:medium, lb_size:large, imageid1:cb_daytrader
WAS = size:medium, imageid1:cb_daytrader
DRIVER_HADOOP = size:xsmall, imageid1:cb_hadoop
HADOOPMASTER = size:small, imageid1:cb_hadoop
HADOOPSLAVE = size:medium, imageid1:cb_hadoop
GIRAPHMASTER = size:small, imageid1:cb_giraph
GIRAPHSLAVE = size:medium, imageid1:cb_giraph
DRIVER_NETPERF = size:xsmall, imageid1:cb_hadoop
NETCLIENT = size:medium, imageid1:cb_netperf
NETSERVER = size:xsmall, imageid1:cb_netperf
IPERFCLIENT = size:small, imageid1:cb_iperf
IPERFSERVER = size:small, imageid1:cb_iperf
NUTTCPCLIENT = size:small, imageid1:cb_nuttcp
NUTTCPSERVER = size:small, imageid1:cb_nuttcp
XPINGSENDER =  size:small, imageid1:cb_xping
XPINGRECEIVER =  size:small, imageid1:cb_xping
DRIVER_COREMARK = size:xsmall, imageid1:cb_coremark
COREMARK = size:xsmall, imageid1:cb_coremark
CLIENT_WINDOWS = size:medium, imageid1:cb_windows
WINDOWS = size:medium, imageid1:cb_windows
DRIVER_FILEBENCH = size:medium, imageid1:cb_filebench
FILEBENCH = size:small, imageid1:cb_filebench
DRIVER_FIO = size:medium, imageid1:cb_fio
FIO = size:medium, imageid1:cb_fio
TINYVM = size:xsmall, imageid1:cb_nullworkload
YATINYVM = size:xsmall, imageid1:cb_nullworkload
FEN_HPC = size:medium, imageid1:cb_hpcc
CN_HPC = size:medium, imageid1:cb_hpcc
DDGEN = size:medium, imageid1:cb_ddgen
SPECJBB = size:medium, imageid1:cb_specjbb
LB = size:medium, imageid1:cb_daytrader
MONGOS = size:large, imageid1:cb_ycsb
MONGO_CFG_SERVER = size:small, imageid1:cb_ycsb
MONGODB = size:medium, imageid1:cb_ycsb
CASSANDRA = size:medium, imageid1:cb_ycsb
SEED = size:medium, imageid1:cb_ycsb
REDIS = size:medium, imageid1:cb_ycsb
YCSB = size:medium, imageid1:cb_ycsb