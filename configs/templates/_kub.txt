[USER-DEFINED]
KUB_ACCESS = need_to_be_configured_by_user
# Name of the ssh key pair 
KUB_KEY_NAME = cbtool_rsa
KUB_SSH_KEY_NAME = cbtool_rsa
KUB_LOGIN = need_to_be_configured_by_user
KUB_INITIAL_VMCS = need_to_be_configured_by_user
KUB_NETNAME = need_to_be_configured_by_user
KUB_NAMESPACE = need_to_be_configured_by_user

# PEBCAK documentation for the Wizard and CLI
KUB_ACCESS_DOC = Please enter the full path to the kubernetes configuration file
KUB_ACCESS_DEFAULT = tcp://<address>:2375
KUB_NAMESPACE_DEFAULT = default
KUB_NAMESPACE_DOC = Namespace to use
KUB_LOGIN_DOC = $LOGIN_DOC
KUB_LOGIN_DEFAULT = klabuser
KUB_SSH_KEY_NAME_DOC = $SSH_KEY_NAME_DOC
KUB_SSH_KEY_NAME_DEFAULT = id_rsa.private
KUB_INITIAL_VMCS_DOC = Kubernetes context (multiple clusters)
KUB_INITIAL_VMCS_DEFAULT = none
KUB_NETNAME_DOC = "Please enter the name of the network that will connect all created Containers"
KUB_NETNAME_DEFAULT = private

[SPACE : KUB_CLOUDCONFIG ]
SSH_KEY_NAME = $KUB_SSH_KEY_NAME

[MON_DEFAULTS : KUB_CLOUDCONFIG ]
COLLECT_FROM_HOST = $False
COLLECT_FROM_GUEST = $False

[VMC_DEFAULTS : KUB_CLOUDCONFIG]
INITIAL_VMCS = $KUB_INITIAL_VMCS
DISCOVER_HOSTS = $False
ACCESS = $Empty
CREDENTIALS = $Empty
SECURITY_GROUPS = $Empty
KEY_NAME = $KUB_KEY_NAME
ADDITIONAL_DISCOVERY = $Empty
MIGRATE_SUPPORTED = $False
PROTECT_SUPPORTED = $False
HOST_USER_ROOT = $False
NAMESPACE = $KUB_NAMESPACE

[VM_DEFAULTS : KUB_CLOUDCONFIG]
ACCESS = $Empty
CREDENTIALS = $Empty
EXTRA_INFO = $Empty
HOSTS_PER_VMC = 5
CAPTURE_SUPPORTED = $False
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $False
LOGIN = $KUB_LOGIN
SECURITY_GROUPS = $Empty
KEY_NAME = $KUB_KEY_NAME
SSH_KEY_NAME = $KUB_SSH_KEY_NAME
CHECK_BOOT_STARTED = poll_cloud
# Other methods could be used to check if a VM *STARTED* booting
#CHECK_BOOT_STARTED = subscribe_on_starting
CHECK_BOOT_COMPLETE = tcp_on_22
# Other methods could be used to check if a VM *FINISHED* booting
#CHECK_BOOT_COMPLETE = subscribe_on_booting
#CHECK_BOOT_COMPLETE = wait_for_0
NETNAME = private
TENANT = default
SIZE = from_vm_template
LEAVE_INSTANCE_ON_FAILURE = $False
FORCE_FAILURE = $False
DISABLE_TIMESYNC = $True
NAMESPACE = $KUB_NAMESPACE
ABSTRACTION = pod
REPLICAS = 1
PORTS_BASE = 10000
IMAGE_PREFIX = ibmcb/ubuntu_
IMAGE_SUFFIX = $EMPTY
IMAGE_PULL_POLICY = IfNotPresent
IMAGE_PULL_SECRETS = $False
DOCKER_REPO = https://hub.docker.com/r/
ANNOTATIONS = $Empty

[AI_DEFAULTS : KUB_CLOUDCONFIG]
CAPTURE_SUPPORTED = $False
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $True
RUN_APPLICATION_SCRIPTS = $True
LOGIN = $KUB_LOGIN
SSH_KEY_NAME = $KUB_SSH_KEY_NAME
ATTACH_PARALLELISM = 5
NAMESPACE = $KUB_NAMESPACE
ABSTRACTION = pod
PORTS_BASE = 10000

[AIDRS_DEFAULTS : KUB_CLOUDCONFIG]
LOGIN = $KUB_LOGIN
SSH_KEY_NAME = $KUB_SSH_KEY_NAME

[VMCRS_DEFAULTS : KUB_CLOUDCONFIG]
LOGIN = $KUB_LOGIN
SSH_KEY_NAME = $KUB_SSH_KEY_NAME

[FIRS_DEFAULTS : KUB_CLOUDCONFIG]
LOGIN = $KUB_LOGIN
SSH_KEY_NAME = $KUB_SSH_KEY_NAME

[VM_TEMPLATES : KUB_CLOUDCONFIG]

[SIZE_TEMPLATES : KUB_CLOUDCONFIG]
X-Y=X-Y
