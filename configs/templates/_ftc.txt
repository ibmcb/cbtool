# NOTE: This file uses duplicate VMC_DEFAULT and VM_DEFAULT sections 
# These duplicate sections are used to override the "internal options" with
# only the FTC-specific variables.

[USER-DEFINED]
FTC_ACCESS = need_to_be_configured_by_user
FTC_INITIAL_VMCS = need_to_be_configured_by_user 
FTC_SSH_KEY_NAME = cbtool_rsa
FTC_LOGIN = need_to_be_configured_by_user
FTC_DISK_FORMAT = need_to_be_configured_by_user 
FTC_OPENVPN_SERVER_ADDRESS = $False
FTC_OPENVPN_ADDRESS_RANGE = $OPENVPN_ADDRESS_RANGE_DEFAULT
FTC_OPENVPN_BOOTSTRAP_ADDRESS = $OPENVPN_BOOTSTRAP_ADDRESS_DEFAULT

# PEBCAK documentation for the Wizard and CLI
FTC_ACCESS_DOC = Please enter the XMLRPC address and port\nof the FTC python daemon. This is generally on the\nsame host as the tool, but not necessarily.\nThe format is 'http://<address>:6060'
FTC_ACCESS_DEFAULT = http://<address>:6060
FTC_LOGIN_DOC = $LOGIN_DOC
FTC_LOGIN_DEFAULT = klabuser
FTC_SSH_KEY_NAME_DOC = $SSH_KEY_NAME_DOC
FTC_SSH_KEY_NAME_DEFAULT = klab_id_rsa
FTC_INITIAL_VMCS_DOC = $INITIAL_VMCS_DOC 
FTC_INITIAL_VMCS_DEFAULT = klinux2,klinux3,klinux4
FTC_DISK_FORMAT_DEFAULT = qcow2
FTC_DISK_FORMAT_DOC = Specify which disk format to tell libvirt: Options are qcow2, qed, or lvm.
FTC_OPENVPN_SERVER_ADDRESS_DOC = $OPENVPN_SERVER_ADDRESS_DOC
FTC_OPENVPN_SERVER_ADDRESS_DEFAULT = $MANAGER_IP
FTC_OPENVPN_ADDRESS_RANGE_DEFAULT = $OPENVPN_ADDRESS_RANGE_DEFAULT
FTC_OPENVPN_ADDRESS_RANGE_DOC = $OPENVPN_ADDRESS_RANGE_DOC
FTC_OPENVPN_BOOTSTRAP_ADDRESS_DEFAULT = $OPENVPN_BOOTSTRAP_ADDRESS_DEFAULT
FTC_OPENVPN_BOOTSTRAP_ADDRESS_DOC = $OPENVPN_BOOTSTRAP_ADDRESS_DOC

[SPACE : FTC_CLOUDCONFIG]
SSH_KEY_NAME = $FTC_SSH_KEY_NAME
OPENVPN_SERVER_ADDRESS = $False
OPENVPN_ADDRESS_RANGE = $FTC_OPENVPN_ADDRESS_RANGE
OPENVPN_BOOTSTRAP_ADDRESS = $False

[MON_DEFAULTS : FTC_CLOUDCONFIG ]
COLLECT_FROM_HOST = $True
COLLECT_FROM_GUEST = $True

[VMC_DEFAULTS : FTC_CLOUDCONFIG]
INITIAL_VMCS = $FTC_INITIAL_VMCS
ACCESS = $FTC_ACCESS
CREDENTIALS = $Empty
SECURITY_GROUPS = $Empty
KEY_NAME = $Empty
DISK_FORMAT = $FTC_DISK_FORMAT 
ADDITIONAL_DISCOVERY = $Empty
MIGRATE_SUPPORTED = $True
PROTECT_SUPPORTED = $True
HOST_USER_ROOT = $False

[VM_DEFAULTS : FTC_CLOUDCONFIG]
ACCESS = $FTC_ACCESS
CAPTURE_SUPPORTED = $False
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $True
EXTRA_SWAP_DISK = vdb
LOGIN = $FTC_LOGIN
SECURITY_GROUPS = $Empty
KEY_NAME = $Empty
SSH_KEY_NAME = $FTC_SSH_KEY_NAME
CHECK_BOOT_STARTED = poll_cloud
# Other methods could be used to check if a VM *STARTED* booting
#CHECK_BOOT_STARTED = subscribe_on_starting
CHECK_BOOT_COMPLETE = tcp_on_22
# Other methods could be used to check if a VM *FINISHED* booting
#CHECK_BOOT_COMPLETE = subscribe_on_booting
#CHECK_BOOT_COMPLETE = wait_for_0
QEMU_DEBUG_PORT_BASE = 12300
QEMU_DEBUG_PORT_MAX = 13300
QEMU_DEBUG_PORT = $EMPTY
DISK_FORMAT = $FTC_DISK_FORMAT 
NETNAME = private
JUMP_HOST = $False
LEAVE_INSTANCE_ON_FAILURE = $False
FORCE_FAILURE = $False

[AI_DEFAULTS : FTC_CLOUDCONFIG]
ATTACH_PARALLELISM = 5
CAPTURE_SUPPORTED = $False
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $True
LOGIN = $FTC_LOGIN
SSH_KEY_NAME = $FTC_SSH_KEY_NAME
DONT_START_QEMU_SCRAPER = $False

[AIDRS_DEFAULTS : FTC_CLOUDCONFIG]
LOGIN = $FTC_LOGIN
SSH_KEY_NAME = $FTC_SSH_KEY_NAME

[VMCRS_DEFAULTS : FTC_CLOUDCONFIG]
LOGIN = $FTC_LOGIN
SSH_KEY_NAME = $FTC_SSH_KEY_NAME

[FIRS_DEFAULTS : FTC_CLOUDCONFIG]
LOGIN = $FTC_LOGIN
SSH_KEY_NAME = $FTC_SSH_KEY_NAME

[VM_TEMPLATES : FTC_CLOUDCONFIG]
CLIENT_DAYTRADER = size:micro32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive, imageid3:config_drive
DRIVER_DAYTRADER = size:micro32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive, imageid3:config_drive
CLIENT_TRADELITE = size:micro32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive, imageid3:config_drive
DRIVER_TRADELITE = size:micro32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive, imageid3:config_drive
DB2 = size:copper32, lb_size:gold32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive, imageid3:config_drive
WAS = size:iron32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
CLIENT_SPECWEB = size:micro32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
SPECWEBFRONT = size:copper32, eclipsed_size:gold32, imageids:2, imageid1:cloudbench_specweb, imageid2:cloudbench_swap
SPECWEBBACK = size:nano32, eclipsed_size:gold32, imageids:2, imageid1:cloudbench_specweb, imageid2:cloudbench_swap
CLIENT_LOST = size:micro32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
LOSTFRONT = size:copper32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
LOSTBACK = size:copper32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
DRIVER_HADOOP = size:nano32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
HADOOPMASTER = size:copper32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
HADOOPSLAVE = size:iron32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
GIRAPHMASTER = size:copper32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
GIRAPHSLAVE = size:iron32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
DRIVER_NETPERF = size:nano32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
NETCLIENT = size:iron32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
NETSERVER = size:iron32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
DRIVER_COREMARK = size:nano32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
COREMARK = size:iron32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
CLIENT_WINDOWS = size:nano32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
WINDOWS = size:iron32, imageids:2, imageid1:cloudbench_windows, imageid2:config_drive
DRIVER_FILEBENCH = size:nano32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
FILEBENCH = size:iron32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
TINYVM = size:pico32, imageids:2, imageid1:cloudbench_tinyvm, imageid2:config_drive
DRIVER_FIO = size:nano32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
FIOCLIENT = size:iron32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
FIOSERVER = size:bronze32, imageids:2, imageid1:cloudbench_rubis_loadbalancer, imageid2:config_drive
RUBIS_APPSRV = size:bronze32, imageids:2, imageid1:cloudbench_rubis_appsrv1, imageid2:config_drive
RUBIS_LB = size:bronze32, imageids:2, imageid1:cloudbench_rubis_loadbalancer, imageid2:config_drive
RUBIS_DRIVER = size:bronze32, imageids:2, imageid1:cloudbench_rubis_driver, imageid2:config_drive
RUBIS_DATABASE = size:bronze32, imageids:2, imageid1:cloudbench_rubis_database, imageid2:config_drive
FEN_HPC = size:bronze32, imageids:2, imageid1:cloudbench_hpc, imageid2:config_drive
CN_HPC = size:bronze32, imageids:2, imageid1:cloudbench_hpc, imageid2:config_drive
DDGEN = size:bronze32, imageids:2, imageid1:cloudbench_hpc, imageid2:config_drive
SPECJBB = size:iron32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
LB = size:iron32, eclipsed_size:gold32, imageids:3, imageid1:cloudbench_root, imageid2:cloudbench_swap, imageid3:config_drive
MLG = size:copper32, imageids:2, imageid1:cloudbench_tinyvm, imageid2:config_drive
MLG2 = size:copper32, imageids:2, imageid1:cloudbench_root, imageid2:config_drive
