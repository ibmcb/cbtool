[USER-DEFINED]
PLM_ACCESS = need_to_be_configured_by_user
PLM_INITIAL_VMCS = need_to_be_configured_by_user 
PLM_KEY_NAME = need_to_be_configured_by_user
PLM_SSH_KEY_NAME = need_to_be_configured_by_user
PLM_LOGIN = need_to_be_configured_by_user
PLM_NETNAME = need_to_be_configured_by_user
PLM_POOLNAME = need_to_be_configured_by_user

# PEBCAK documentation for the Wizard and CLI
PLM_ACCESS_DOC = Please enter the comma-separated list of URLs that should be use to remotely interact with multiple Libvirt(d) hosts\nThis is usually in the form of qem+tcp://<address1>,qemu+tcp://<address2> PLM_ACCESS_DEFAULT = qemu+tcp://<address1>
PLM_LOGIN_DOC = $LOGIN_DOC
PLM_LOGIN_DEFAULT = klabuser
PLM_SSH_KEY_NAME_DOC = $SSH_KEY_NAME_DOC
PLM_SSH_KEY_NAME_DEFAULT = klab_id_rsa
PLM_INITIAL_VMCS_DOC = $INITIAL_VMCS_DOC 
PLM_INITIAL_VMCS_DEFAULT = HostGroup1:sut
PLM_NETNAME_DOC = "Please enter the name of the network that will connect all created Domains"
PLM_NETNAME_DEFAULT = default
PLM_POOLNAME_DOC = "Please enter the name of the pool which will hold the boot volumes for all Domanins"
PLM_POOLNAME_DEFAULT = default

[SPACE : PLM_CLOUDCONFIG]
SSH_KEY_NAME = $PLM_SSH_KEY_NAME

[MON_DEFAULTS : PLM_CLOUDCONFIG ]
COLLECT_FROM_HOST = $False
COLLECT_FROM_GUEST = $False

[VMC_DEFAULTS : PLM_CLOUDCONFIG]
INITIAL_VMCS = $PLM_INITIAL_VMCS
ACCESS = $PLM_ACCESS
CREDENTIALS = $Empty
SECURITY_GROUPS = $Empty
KEY_NAME = $PLM_KEY_NAME
POOLNAME = $PLM_POOLNAME
ADDITIONAL_DISCOVERY = $Empty
MIGRATE_SUPPORTED = $False
PROTECT_SUPPORTED = $False
HOST_USER_ROOT = $False

[VM_DEFAULTS : PLM_CLOUDCONFIG]
ACCESS = $PLM_ACCESS
LOGIN = $PLM_LOGIN
KEY_NAME = $PLM_KEY_NAME
SSH_KEY_NAME = $PLM_SSH_KEY_NAME
CREDENTIALS = $Empty
SECURITY_GROUPS = $Empty
CAPTURE_SUPPORTED = $True
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $False
ROOT_DISK_FORMAT=qcow2
CHECK_BOOT_STARTED = poll_cloud
# Other methods could be used to check if a VM *STARTED* booting
#CHECK_BOOT_STARTED = subscribe_on_starting
CHECK_BOOT_COMPLETE = tcp_on_22
# Other methods could be used to check if a VM *FINISHED* booting
#CHECK_BOOT_COMPLETE = subscribe_on_booting
#CHECK_BOOT_COMPLETE = wait_for_0
NETNAME = $PLM_NETNAME
POOLNAME = $PLM_POOLNAME
EXTRA_NETNAMES = $False
PORTS_BASE = $False
VOLUME_LIST = $Empty
USERDATA = $True
USERDATA_SSH = $True
SIZE = from_vm_template
TENANT = default
ARCH = x86_64
HYPERVISOR = kvm
OVERRIDE_BOOT_VV_SIZE = 20
HOST_REMOTE_USER = root
HOST_REMOTE_DIR = /var/lib/libvirt/images
EMULATOR = /usr/bin/kvm-spice
DISKMODE = virtio
NETMODE = virtio
LEAVE_INSTANCE_ON_FAILURE = $False
FORCE_FAILURE = $False
DISABLE_TIMESYNC = $False
IMAGE_PREFIX = $EMPTY
IMAGE_SUFFIX = $EMPTY

[AI_DEFAULTS : PLM_CLOUDCONFIG]
ATTACH_PARALLELISM = 10
CAPTURE_SUPPORTED = $False
RUNSTATE_SUPPORTED = $True
RESIZE_SUPPORTED = $True
LOGIN = $PLM_LOGIN
SSH_KEY_NAME = $PLM_SSH_KEY_NAME
DONT_START_QEMU_SCRAPER = $True

[AIDRS_DEFAULTS : PLM_CLOUDCONFIG]
LOGIN = $PLM_LOGIN
SSH_KEY_NAME = $PLM_SSH_KEY_NAME

[VMCRS_DEFAULTS : PLM_CLOUDCONFIG]
LOGIN = $PLM_LOGIN
SSH_KEY_NAME = $PLM_SSH_KEY_NAME

[FIRS_DEFAULTS : PLM_CLOUDCONFIG]
LOGIN = $PLM_LOGIN
SSH_KEY_NAME = $PLM_SSH_KEY_NAME

[VM_TEMPLATES : PLM_CLOUDCONFIG]
NEST_CONTAINERS_BASE_IMAGE = size:NA, imageids:1, imageid1:bionic-server-cloudimg-amd64.img, cloudinit_packages:openvpn;bc;jq;docker.io;python;redis-server

[SIZE_TEMPLATES : PLM_CLOUDCONFIG]
# Sizes extracted from lib/clouds/plm_cloud_ops.py (see the definition of self.vhw_config)
01-256=pico32
01-512=nano32
01-1024=micro32
01-2048=copper32
01-2560=bronze32
02-2048=iron32
04-2048=silver32
04-8192=silver64
02-4096=copper64
04-4096=gold32
02-5120=copper64
06-16384=steel64
08-8192=steel32
08-16384=gold64
16-16384=platinum64
16-32768=mercury64
32-65536=latinum64
64-491520=stupid64
