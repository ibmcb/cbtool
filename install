#!/usr/bin/env python

#/*******************************************************************************
# Copyright (c) 2012 IBM Corp.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/*******************************************************************************

'''
    Created on Nov 1, 2012

    CREAT (CBTOOL) Configuration Tool

    @author: Marcio Silva, Michael R. Hines
'''

from pwd import getpwuid
from shutil import copyfile

import os
import re

def main() :
    '''
    TBD
    '''
    _path = re.compile(".*\/").search(os.path.realpath(__file__)).group(0)
    _3rd_party = _path + "/3rd_party"

    if not os.path.exists(_3rd_party) :
        os.mkdir(_3rd_party)

    from lib.auxiliary.dependencies import dependency_checker_installer
    _msg = "Automatically installing dependencies for Cloud Rapid Experimentation"
    _msg += " Analysis and Toolkit dependencies on this node........."
    print _msg
    _status, _msg = dependency_checker_installer("127.0.0.1", getpwuid(os.getuid())[0], _3rd_party, "inst")
    if _status :
        print _msg
        print "Please add the missing dependency(ies) and re-run configure again."
        exit()
    else :
        print _msg

    _username = getpwuid(os.getuid())[0]
    
    _msg = "Checking for a \"private\" configuration file for user \"" + _username
    _msg += "\" in " + _path + "/configs/" + _username + "_cloud_definitions.txt)"
    print _msg
    if not os.path.exists(_path + "/configs/" + _username + "_cloud_definitions.txt") :
        _msg = "Copying " + _path + "/configs/cloud_definitions.txt to "
        _msg += _path + "/configs/" + _username + "_cloud_definitions.txt..."
        print _msg
        copyfile(_path + "/configs/cloud_definitions.txt", _path + "/configs/" + _username + "_cloud_definitions.txt")
        print "Please re-run configure again"
    else :
        print "File already exists, tool is ready to be used."
main()
